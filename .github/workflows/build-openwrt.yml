name: Build OpenWrt

on:
  release:
    types: published
  push:
    branches:
      - master
    paths:
      - '.config'
#  schedule:
#    - cron: 0 8 * * 5
  watch:
    types: started

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d/* /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    #   curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc

    - name: Clone source code
      run: git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
      
    - name: Add package
      run: |
        sed -i 's/#src-git helloworld/src-git helloworld/g' openwrt/feeds.conf.default
    #   git clone https://github.com/frainzy1477/luci-theme-rosyy.git openwrt/package/lean/luci-theme-rosy
    #   sed -i '$a src-git lienol https://github.com/Lienol/openwrt-package' openwrt/feeds.conf.default
      
    #  - name: Update V2ray
    #    run: |
    #      sed -i 's/4.23.3/4.23.4/g' openwrt/package/lean/v2ray/Makefile
    #      sed -i 's/39558c5a9300158a4adf76d099b210790f7ef9705ce2909c6bdc2fccc70d5c69/b401f98cabe849033966acb1c6132ae4d6b178ab45330543be3b2356c8348d10/g' openwrt/package/lean/v2ray/Makefile
      
    
    - name: Add luci theme
      run: |
        rm -rf openwrt/package/lean/luci-theme-argon
        git clone -b 18.06 https://github.com/jerrykuku/luci-theme-argon.git openwrt/package/lean/luci-theme-argon
    #   git clone -b test https://github.com/frainzy1477/luci-app-clash.git openwrt/package/lean/luci-app-clash

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a
    
    #  - name: Delete redundant package
    #    run:
    #      rm -rf feeds/lienol/lienol/ipt2socks
    #      rm -rf feeds/lienol/lienol/shadowsocksr-libev
    #      rm -rf feeds/lienol/lienol/pdnsd-alt
    #      rm -rf feeds/lienol/package/verysync
    #      rm -rf feeds/lienol/lienol/luci-app-verysync
    #      rm -rf package/lean/luci-app-kodexplorer
    #      rm -rf package/lean/luci-app-pppoe-relay
    #      rm -rf package/lean/luci-app-pptp-server
    #      rm -rf package/lean/luci-app-v2ray-server

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_SH
        cd openwrt
        ../$DIY_SH

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
#     - name: Compile luci-base
#       run: |
#        cd openwrt
#        make package/feeds/luci/luci-base/compile V=99

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "::set-output name=status::success"

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$PWD"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
